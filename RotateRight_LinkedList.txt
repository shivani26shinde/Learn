/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode A, int B) {
        ListNode temp = A;
        int num = 0;
        while(temp!=null){
            num++;
            temp = temp.next;
        }
        B = B%num;
        if(num == 1 || B == 0) return A;
        ListNode l1 = A;
        ListNode curr = A;
        int start = 0;
        while(start != num-B){
            A = curr;
            curr = curr.next;
            start++;
        }
        A.next = null;
        ListNode l2 = curr;
        
        while(curr!= null && curr.next != null){
            curr = curr.next;
        }
        curr.next = l1;
        return l2;
    }
}
