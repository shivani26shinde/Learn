public class Solution {
    public ArrayList<Integer> dNums(ArrayList<Integer> A, int B) {
        ArrayList<Integer> nums = new ArrayList<Integer>();
        if(A.size() < B){
            return nums;
        }
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        int i=0;
        int n = A.size();
        while(i<n && i<B-1){
            if(map.containsKey(A.get(i))){
                int val = map.get(A.get(i));
                map.put(A.get(i), val+1);
            } else{
                map.put(A.get(i), 1);
            }
            i++;
        }
        while(i<n){
            if(map.containsKey(A.get(i))){
                int val = map.get(A.get(i));
                map.put(A.get(i), val+1);
            } else{
                map.put(A.get(i), 1);
            }
            nums.add(map.size());
            int ind = i+1-B;
            int num = map.get(A.get(ind));
            if(num == 1){
                map.remove(A.get(ind));
            } else{
                map.put(A.get(ind), num-1);
            }
            i++;
        }
        return nums;
    }
}
