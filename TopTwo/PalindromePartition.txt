class Solution {
    List<List<String>> lst = new ArrayList<>();
    public List<List<String>> partition(String s) {
        Recur(0, new ArrayList<String>(), s);
        return lst;
    }
    public void Recur(int j, ArrayList<String> temp, String s){
        if(j == s.length()){
            lst.add(new ArrayList<String>(temp));
            return;
        }
        String str = "";
        for(int i=j;i<s.length();i++){
            str += s.charAt(i);
            if(isPalindrome(str)){
                temp.add(str);
                Recur(i+1, temp, s);
                temp.remove(temp.size()-1);
            }
        }
    }
    public boolean isPalindrome(String str){
        int s=0;
        int e=str.length()-1;
        while(s<e){
            if(str.charAt(s) != str.charAt(e)){
                return false;
            }
            s++;
            e--;
        }
        return true;
    }
}