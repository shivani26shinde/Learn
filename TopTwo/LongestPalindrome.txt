class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        int[][] arr = new int[n][n];
        int[][] arrN = new int[n][n];
        String ans = "";
        int max = 1;
        for(int i=0;i<n;i++){
            arr[i][i] = 1;
            arrN[i][i] = 1;
        }
        for(int i=0;i<n-1;i++){
           if(s.charAt(i) == s.charAt(i+1)){
               arr[i][i+1] = 1;
               max = 2;
               ans = s.substring(i,i+2);
           }
        }
        for(int i=2;i<n;i++){
           for(int j=0;j<n-i;j++){
               if(s.charAt(j) == s.charAt(j+i) &&
                 arr[j+1][j+i-1] == 1) 
                   arr[j][j+i] = 1;
           }
        }
        for(int i=1;i<n;i++){
           for(int j=0;j<n-i;j++){
               if(s.charAt(j) == s.charAt(j+i) &&
                 arr[j][j+i] == 1){
                   arrN[j][j+i] = arrN[j+1][j+i-1] + 2;
               } else{
                   arrN[j][j+i] = Math.max(arrN[j][j+i-1],
                                           arrN[j+1][j+i]);
               }
               if(arrN[j][j+i] > max){
                   max = arrN[j][j+i];
                   ans = s.substring(j, j+i+1);
               } 
           }
        }
        return ans;
    }
}
