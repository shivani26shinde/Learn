public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> repeatedNumber(final List<Integer> A) {
        ArrayList<Integer> list = new ArrayList<Integer>();
        HashSet<Integer> set = new HashSet<Integer>();
        long sum1=0,sum2=0;
        int db=1;
        for(int i=0;i<A.size();i++){
            sum1 = sum1 + (long) A.get(i);
            if(set.contains(A.get(i))){
                db = A.get(i);
                list.add(db);
            } else{
                set.add(A.get(i));
            }
        }
        for(int i=1;i<=A.size();i++){
            sum2 = sum2 + (long) i;
        }
        int num = (int) (sum1-sum2);
        num = db - num;
        list.add(num);
        return list;
    }
}

// Solution 2
public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> repeatedNumber(final List<Integer> A) {
        ArrayList<Integer> list = new ArrayList<Integer>();
        HashSet<Integer> set = new HashSet<Integer>();
        long sum1=0,sum2=0;
        int db=1;
        for(int i=0;i<A.size();i++){
            sum1 = sum1 + (long) A.get(i);
            if(set.contains(A.get(i))){
                db = A.get(i);
                list.add(db);
            } else{
                set.add(A.get(i));
            }
        }
        for(int i=1;i<=A.size();i++){
            if(!set.contains(i)){
                list.add(i);
                return list;
            }
        }
        return list;
    }
}
