class Solution {
    ArrayDeque<Integer> q;
    public int[] maxSlidingWindow(int[] nums, int k) {
        q = new ArrayDeque<>();
        int n = nums.length;
        if(n==0){
            return new int[0];
        }
        int[] ans = new int[n-k+1];
        int max=0;
        for(int i=0;i<k;i++){
            clear(i,k,nums);
            q.addLast(i);
            max = q.getFirst();
        }
        ans[0] = nums[max];
        for(int i=k;i<n;i++){
            clear(i,k,nums);
            q.addLast(i);
            ans[i-k+1]=nums[q.getFirst()];
        }
        return ans;
    }
    public void clear(int i, int k, int[] nums){
        if(!q.isEmpty() && q.getFirst() == i-k){
            q.removeFirst();
        }
        while(!q.isEmpty() && nums[i]>nums[q.getLast()]){
            q.removeLast();
        }
    }
}
