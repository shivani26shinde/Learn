// BFS

class Ideone
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Graph g = new Graph(4);
		g.addEdge(0, 1); 
        g.addEdge(0, 2); 
        g.addEdge(1, 2); 
        g.addEdge(2, 0); 
        g.addEdge(2, 3); 
        g.addEdge(3, 3);
        BFS(0, g.adj);
	}
	
	public static void BFS(int s, LinkedList<Integer>[] adj){
		Queue<Integer> q = new LinkedList<Integer>();
		int[] v = new int[4];
		q.add(s);
		v[s] = 1;
		while(!q.isEmpty()){
			int num = q.poll();
			System.out.print(num+"  ");
			LinkedList<Integer> l = adj[num];
			for(int i=0;i<l.size();i++){
				if(v[l.get(i)] != 1){
					q.add(l.get(i));
					v[l.get(i)] = 1;
				}
			}
		}
	}
}
class Graph{
	int v;
	LinkedList<Integer>[] adj;
	
	public Graph(int v){
		this.v = v;
		adj = new LinkedList[this.v];
		for(int i=0;i<this.v;i++){
			adj[i] = new LinkedList<Integer>(); 
		}
	}
	
	void addEdge(int v, int n){
		this.adj[v].add(n);
	}
}