/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    ArrayList<ArrayList<Integer>> l = new ArrayList<ArrayList<Integer>>();
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode A) {
        int h = height(A);
        for(int i=1;i<=h;i++){
            ArrayList<Integer> temp = new ArrayList<Integer>();
            Add(A, 1, i, temp);
            l.add(temp);
        }
        return l;
    }
    public int height(TreeNode root){
        if(root == null) return 0;
        return Math.max(height(root.left), height(root.right))+1;
    }
    public void Add(TreeNode root, int level, int h, ArrayList<Integer> temp){
        if(root == null){
            return;
        }
        if(level == h){
            temp.add(root.val);
            return;
        }
        Add(root.left, level+1, h, temp);
        Add(root.right, level+1, h, temp);
    }
}
