class Solution {
    public int ladderLength(String beginWord, String endWord, List<String> wordList) {
        HashMap<String, Integer> map = new HashMap<>();
        Queue<String> q = new LinkedList<>();
        
        map.put(beginWord, 1);
        q.add(beginWord);
        
        while(!q.isEmpty()){
            String s = q.poll();
            if(s.equals(endWord)){
                return map.get(s);
            }
            for(int i=0;i<wordList.size();i++){
                String st = wordList.get(i);
                if(!map.containsKey(st) && diff(s,st) == 1){
                    q.add(st);
                    map.put(st, map.get(s)+1);
                }
            }
        }
        return 0;
    }
    public int diff(String a, String b){
        int count = 0;
        for(int i=0;i<a.length();i++){
            if(a.charAt(i) != b.charAt(i)){
                count++;
            }
        }
        return count;
    }
}
