/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    List<TreeNode> list = new ArrayList<>();
    HashMap<String,Integer> map = new HashMap<>();
    public List<TreeNode> findDuplicateSubtrees(TreeNode root) {
        getNode(root);
        return list;
    }
    
    public String getNode(TreeNode root){
        if(root==null) return "N";
        String node = root.val+","+getNode(root.left)+","+getNode(root.right);
        map.put(node, map.getOrDefault(node,0)+1);
        if(map.get(node)==2){
            list.add(root);
        }
        return node;
    }
}
