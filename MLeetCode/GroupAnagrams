// Solution 1
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        HashMap<String,List<String>> map = new HashMap<>();
        int[] count = new int[26];
        for(String s: strs){
            Arrays.fill(count,0);
            for(char c: s.toCharArray()) count[c-'a']++;
            StringBuilder sb = new StringBuilder();
            for(int i=0;i<26;i++){
                sb.append("#");
                sb.append(count[i]);
            }
            String str = sb.toString();
            if(!map.containsKey(str)) map.put(str, new ArrayList<>());
            map.get(str).add(s);
        }
        return new ArrayList(map.values());
    }
}

// Solution 2 - Sorting
class Solution {
    List<List<String>> list = new ArrayList<>();
    public List<List<String>> groupAnagrams(String[] strs) {
        HashMap<String, List<String>> map = new HashMap<>();
        for(int i=0;i<strs.length;i++){
            String s = get(strs[i]);
            if(map.containsKey(s)){
                List<String> l = map.get(s);
                l.add(strs[i]);
                map.put(s,l);
            } else{
                List<String> l = new ArrayList<>();
                l.add(strs[i]);
                map.put(s,l);
            }
        }
        for(String st: map.keySet()){
            list.add(map.get(st));
        }
        return list;
    }
    public String get(String s){
        char[] ch = s.toCharArray();
        Arrays.sort(ch);
        return String.valueOf(ch);
    }
}
