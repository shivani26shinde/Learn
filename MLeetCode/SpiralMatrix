class Solution {
    List<Integer> list = new ArrayList<>();
    public List<Integer> spiralOrder(int[][] matrix) {
        int row = matrix.length;
        if(row==0){
            return list;
        }
        int col = matrix[0].length;
        int startRow = 0, startCol = 0;
        int endRow = row-1, endCol = col-1;
        while(startRow <= endRow && startCol <= endCol){
            // Right
            for(int i=startCol;i<=endCol;i++){
                list.add(matrix[startRow][i]);
            }
            startRow++;
            
            // Down
            for(int i=startRow;i<=endRow;i++){
                list.add(matrix[i][endCol]);
            }
            endCol--;
            
            // Left
            if(startRow<=endRow){
                for(int i=endCol;i>=startCol;i--){
                    list.add(matrix[endRow][i]);
                }
                endRow--;
            }
            
            // Up
            if(startCol<=endCol){
                for(int i=endRow;i>=startRow;i--){
                    list.add(matrix[i][startCol]);
                }
                startCol++;
            }
        }
        return list;
    }
}
