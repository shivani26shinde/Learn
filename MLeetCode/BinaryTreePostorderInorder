/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int index;
    HashMap<Integer,Integer> map = new HashMap<>();
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        index = postorder.length-1;
        for(int i=0;i<inorder.length;i++)
            map.put(inorder[i], i);
        return getTree(0,postorder.length-1,postorder);
    }
    public TreeNode getTree(int start,int end,int[] postorder){
        if(start>end) return null;
        int loc = getIndex(postorder[index]);
        TreeNode root = new TreeNode(postorder[index]);
        index--;
        root.right = getTree(loc+1,end,postorder);
        root.left = getTree(start,loc-1,postorder);
        return root;
    }
    public int getIndex(int i){
        return map.get(i);
    }
}
