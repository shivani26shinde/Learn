class Solution {
    public int[] exclusiveTime(int n, List<String> logs) {
        int[] ans = new int[n];
        List<Time> start = new ArrayList<>();
        List<Time> end = new ArrayList<>();
        for(String s: logs){
            String[] str = s.split(":");
            Time t = new Time(Integer.parseInt(str[0]), Integer.parseInt(str[2]));
            if(str[1].equals("start")) start.add(t);
            else end.add(t);
        }
        Collections.sort(start);
        Collections.sort(end);
        for(int i=0;i<start.size()-1;i++){
            Time t1 = start.get(i);
            Time t2 = start.get(i+1);
            ans[t1.id] += t2.time-t1.time;
        }
        for(int i=end.size()-1;i>0;i--){
            Time t1 = end.get(i);
            Time t2 = end.get(i-1);
            ans[t1.id] += t1.time-t2.time;
        }
        Time t1 = start.get(start.size()-1);
        Time t2 = end.get(0);
        ans[t1.id] = t2.time-t1.time+1;
        return ans;
    }
}
class Time implements Comparable<Time> {
    int id;
    int time;
    public Time(int id, int time){
        this.id=id;
        this.time=time;
    }
    public int compareTo(Time t){
        return this.time-t.time;
    }
}
