class Solution {
    public int countNodes(TreeNode root) {
        if(root==null) return 0;
        int d=depth(root);
        if(d==0) return 1;
        int left=1,right=(int)Math.pow(2,d)-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(isPresent(root,mid,d)) left=mid+1;
            else right=mid-1;
        }
        return (int)Math.pow(2,d)-1 + left;
    }
    
    public boolean isPresent(TreeNode root, int val, int d){
        int left=0,right=(int)Math.pow(2,d)-1;
        for(int i=0;i<d;i++){
            int mid=left+(right-left)/2;
            if(val<=mid){
                root=root.left;
                right=mid;
            } else{
                root=root.right;
                left=mid+1;
            }
        }
        return root!=null;
    }
    
    public int depth(TreeNode root){
        int count=0;
        while(root.left!=null){
            root=root.left;
            count++;
        }
        return count;
    }
}
