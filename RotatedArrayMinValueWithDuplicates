// Binary Search O(logn)
class Solution {
    public int findMin(int[] nums) {
        int N = nums.length;
        if(N==0) return -1;
        if(N==1 || nums[0]<nums[N-1]) return nums[0];
        int i=0,j=N-1;
        while(i<=j){
            int m = i+(j-i)/2;
            if(nums[m]>nums[j]) i=m+1;
            else if(nums[m]==nums[j]) j--;
            else if(nums[m]<nums[j]) j=m;
        }
        return nums[i];
    }
}

// O(n)
class Solution {
    public int findMin(int[] nums) {
        int N = nums.length;
        if(N==0) return -1;
        int min = Integer.MAX_VALUE;
        for(int i=0;i<N;i++){
            min = Math.min(min,nums[i]);
        }
        return min;
    }
}
