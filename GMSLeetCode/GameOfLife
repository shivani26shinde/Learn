class Solution {
    public void gameOfLife(int[][] board) {
        int n=board.length;
        if(n==0) return;
        int m=board[0].length;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                boolean isLive = board[i][j]==1 || board[i][j]==2 || board[i][j]==3;
                board[i][j] = check(board,i,j,n,m,isLive);
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==2 || board[i][j]==4) board[i][j] = 1;
                else if(board[i][j]==3) board[i][j] = 0;
            }
        }
        return;
    }
    public int check(int[][] board,int i,int j,int n,int m,boolean isLive){
        int live=0;
        int dead=0;
        
        // Left
        if(j>0 && 
           (board[i][j-1]==1 || board[i][j-1]==2 || board[i][j-1]==3)) live++;
        else dead++;
        
        // North-Left
        if(i>0 && j>0 && 
           (board[i-1][j-1]==1 || board[i-1][j-1]==2 || board[i-1][j-1]==3)) live++;
        else dead++;
        
        // North
        if(i>0 && 
           (board[i-1][j]==1 || board[i-1][j]==2 || board[i-1][j]==3)) live++;
        else dead++;
        
        // North-Right
        if(i>0 && j<m-1 && 
           (board[i-1][j+1]==1 || board[i-1][j+1]==2 || board[i-1][j+1]==3)) live++;
        else dead++;
        
        // Right
        if(j<m-1 && 
           (board[i][j+1]==1 || board[i][j+1]==2 || board[i][j+1]==3)) live++;
        else dead++;
        
        // South-Right
        if(i<n-1 && j<m-1 && 
           (board[i+1][j+1]==1 || board[i+1][j+1]==2 || board[i+1][j+1]==3)) live++;
        else dead++;
        
        // South
        if(i<n-1 && 
           (board[i+1][j]==1 || board[i+1][j]==2 || board[i+1][j]==3)) live++;
        else dead++;
        
        // South Left
        if(i<n-1 && j>0 && 
           (board[i+1][j-1]==1 || board[i+1][j-1]==2 || board[i+1][j-1]==3)) live++;
        else dead++;
        
        if(isLive && (live<2 || live>3)) return 3;
        else if(isLive && (live==2 || live==3))return 2; 
        else if(!isLive && live==3) return 4;
        return board[i][j];
    }
}
