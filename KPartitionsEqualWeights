class Solution {
    int[] arr;
    int num;
    boolean flag = false;
    public boolean canPartitionKSubsets(int[] nums, int k) {
        int sum = 0;
        arr = new int[nums.length];
        for(int i=0;i<nums.length;i++){
            sum += nums[i];
            arr[i] = -1;
        }
        if(sum%k != 0){
            return false;
        }
        num = sum/k;
        Recur(0, 0, nums, k);
        return flag;
    }
    
    public void Recur(int sum, int start, int[] nums, int k){
        if(flag){
            return;
        }
        if(k == 1){
            flag = true;
            return;
        }
        if(sum == num){
            Recur(0, 0, nums, k-1);
        }
        for(int i=start;i<nums.length;i++){
            if(arr[i] == -1){
                arr[i] = 1;
                Recur(sum+nums[i], i+1, nums, k);
                arr[i] = -1;
            }
        }
    }
}
