class Solution {
    String[] str;
    int n;
    List<String> fL = new ArrayList<>();
    public List<String> letterCombinations(String digits) {
        n = digits.length();
        if(n == 0)
            return new ArrayList<>();
        str = new String[8];
        populate();
        generate(new StringBuilder(),0,digits);
        return fL;
    }
    
    public void generate(StringBuilder ans, int start, String digits){
        if(ans.length() == n){
            fL.add(ans.toString());
            return;
        }
        if(start == n) return;
        for(int i=start;i<n;i++){
            int num = Character.getNumericValue(digits.charAt(i));
            String s = str[num-2];
            for(int j=0;j<s.length();j++){
                ans.append(s.charAt(j));
                generate(ans, i+1, digits);
                ans.deleteCharAt(ans.length()-1);
            }
        }
    }
    
    public void populate(){
        char c = 'a';
        for(int i=0;i<8;i++){
            StringBuilder sb = new StringBuilder();
            int j=0;
            if(i==5 || i==7){
                while(j<4){
                    sb.append(c);
                    c++;
                    j++;
                }
            } else{
                while(j<3){
                    sb.append(c);
                    c++;
                    j++;
                }
            }
            str[i] = sb.toString();
        }
    }
}