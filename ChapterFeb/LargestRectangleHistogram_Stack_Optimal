class Solution {
    public int largestRectangleArea(int[] heights) {
        int n=heights.length;
        int i=0,max=0,ans=0,top=0;
        Stack<Integer> st = new Stack<>();
        while(i<n){
            while(!st.isEmpty() && heights[st.peek()]>heights[i]){
                top=st.pop();
                if(st.isEmpty()) ans = heights[top]*i;
                else ans = heights[top]*(i-st.peek()-1);
                max = Math.max(max, ans);
            }
            st.push(i);
            i++;
        }
        while(!st.isEmpty()){
            top=st.pop();
            if(st.isEmpty()) ans = heights[top]*i;
            else ans = heights[top]*(i-st.peek()-1);
            max = Math.max(max, ans);
        }
        return max;
    }
}
