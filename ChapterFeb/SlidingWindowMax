class Solution {
    Deque<Integer> q = new LinkedList<>();
    public int[] maxSlidingWindow(int[] nums, int k) {
        int n=nums.length;
        if(n<k || n==0) return new int[]{};
        int i=0;
        int j=1;
        int[] arr = new int[n-k+1];
        while(i<k){
            update(i,nums,k);
            q.addLast(i++);
        }
        arr[0] = nums[q.getFirst()];
        while(i<n){
            update(i,nums,k);
            q.addLast(i++);
            arr[j++] = nums[q.getFirst()];
        }
        return arr;
    }
    public void update(int i, int[] nums, int k){
        if(!q.isEmpty() && i-q.getFirst()==k){
            q.removeFirst();
        }
        while(!q.isEmpty() && nums[i]>nums[q.getLast()]){
            q.removeLast();
        }
    }
}
