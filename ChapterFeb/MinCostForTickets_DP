class Solution {
    Set<Integer> set;
    Integer[] dp;
    public int mincostTickets(int[] days, int[] costs) {
        dp = new Integer[366];
        set = new HashSet<>();
        for(int d:days) set.add(d);
        return mincostTickets(1, days, costs);
    }
    public int mincostTickets(int i, int[] days, int[] costs) {
        if(i>365) return 0;
        if(dp[i]!=null) return dp[i];
        int ans;
        if(set.contains(i)){
            ans = Math.min(mincostTickets(i+1, days, costs) + costs[0],
                           mincostTickets(i+7, days, costs) + costs[1]);
            ans = Math.min(ans, mincostTickets(i+30, days, costs) + costs[2]);
        } else{
            ans = mincostTickets(i+1, days, costs);
        }
        dp[i]=ans;
        return dp[i];
    }
}
