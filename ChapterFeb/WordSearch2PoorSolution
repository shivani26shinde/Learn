class Solution {
    char[][] board;
    int m;
    int n;
    public List<String> findWords(char[][] board, String[] words) {
        List<String> list = new ArrayList<>();
        this.board = board;
        m = board.length;
        if(m==0) return list;
        n = board[0].length;
        for(int k=0;k<words.length;k++){
            String word = words[k];
            if(exist(word)) list.add(word);
        }
        return list;
    }
    public boolean exist(String word){
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(this.board[i][j]==word.charAt(0) 
                   && exist(i,j,0,word)) return true;
            }
        }
        return false;
    }
    public boolean exist(int i, int j, int start, String word){
        if(start==word.length()) return true;
        if(i<0 || j<0 || i==m || j==n 
           || this.board[i][j] != word.charAt(start)) return false;
        
        char ch = this.board[i][j];
        this.board[i][j] = '1';
        
        boolean doesExist = exist(i+1,j,start+1,word) 
            || exist(i,j+1,start+1,word) 
            || exist(i-1,j,start+1,word) 
            || exist(i,j-1,start+1,word);
        
        this.board[i][j] = ch;
        return doesExist;
    }
}
