// Solution 1 - Iterative
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode node = new ListNode(0);
        ListNode temp = node;
        while(l1!=null && l2!=null){
            if(l1.val<l2.val){
                temp.next = l1;
                temp = temp.next;
                l1 = l1.next;
                temp.next = null;
            } else{
                temp.next = l2;
                temp = temp.next;
                l2 = l2.next;
                temp.next = null;
            }
        }
        while(l1!=null){
            temp.next = l1;
            temp = temp.next;
            l1 = l1.next;
            temp.next = null;
        }
        while(l2!=null){
            temp.next = l2;
            temp = temp.next;
            l2 = l2.next;
            temp.next = null;
        }
        return node.next;
    }
}
// Solution 2 - Recursive
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null) return l2;
        if(l2==null) return l1;
        if(l1.val<l2.val)
            l1.next = mergeTwoLists(l1.next,l2);
        else
            l2.next = mergeTwoLists(l1,l2.next);
        return l1.val<l2.val ? l1 : l2;
    }
}
