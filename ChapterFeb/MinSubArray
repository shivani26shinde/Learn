// Input: s = 7, nums = [2,3,1,2,4,3]
// Output: 2
// Explanation: the subarray [4,3] has the minimal length under the problem constraint.

class Solution {
    public int minSubArrayLen(int s, int[] nums) {
        if(s==0) return 0;
        int min = Integer.MAX_VALUE;
        int sum=0;
        int i=0;
        for(int j=0;j<nums.length;j++){
            sum+=nums[j];
            while(sum>=s){
                min=Math.min(min,j-i+1);
                sum-=nums[i++];
            }
        }
        return min==Integer.MAX_VALUE ? 0:min;
    }
}
