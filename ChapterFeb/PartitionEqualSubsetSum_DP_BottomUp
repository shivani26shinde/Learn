class Solution {
    HashMap<String,Integer> map = new HashMap<>();
    boolean[][] dp;
    int n;
    public boolean canPartition(int[] nums) {
        int sum=0;
        n=nums.length;
        for(int i:nums) sum+=i;
        if(sum%2!=0) return false;
        sum=sum/2;
        dp = new boolean[n][sum+1];
        for(int i=0;i<n;i++) dp[i][0]=true;
        for(int i=1;i<=sum;i++)
            if(nums[0]==i) dp[0][i] = true;
        for(int i=1;i<n;i++){
            for(int j=1;j<=sum;j++){
                if(dp[i-1][j]) dp[i][j] = dp[i-1][j];
                else if(nums[i]<=j) dp[i][j] = dp[i-1][j-nums[i]];
            }
        }
        return dp[n-1][sum];
    }
}
