class Solution {
    Stack<String> st;
    List<String> l;
    public int calculate(String s) {
        st = new Stack<>();
        s=s.replaceAll("\\s","");
        char[] ch = s.toCharArray();
        StringBuilder str = new StringBuilder();
        for(int i=0;i<ch.length;i++){
            char c = ch[i];
            if(Character.isDigit(c)){
                str.append(c);
            } else{
                if(str.length() > 0){
                    st.push(str.toString());
                    str = new StringBuilder();
                }
                if(c==')'){
                    performCalculation();
                } else{
                    st.push(String.valueOf(c));
                }
            }
        }
        if(str.length() > 0){
            st.push(str.toString());
            str = new StringBuilder();
        }
        if(st.size()>1){
            performCalculation();
        }
        return Integer.parseInt(st.peek());
    }
    
    public void performCalculation(){
        l = new ArrayList<>();
        while(!st.isEmpty()){
            if(st.peek().equals("(")){
                st.pop();
                break;
            }
            l.add(0,st.pop());
        }
        String value = calculate();
        st.push(value);
    }
    
    public String calculate(){
        if(l.size() == 1){
            return l.get(0);
        }
        int num1 = Integer.parseInt(l.get(0));
        for(int i=1;i<l.size();i+=2){
            int num2 = Integer.parseInt(l.get(i+1));
            if(l.get(i).equals("+")){
                num1 += num2;
            } else{
                num1 -= num2;
            }
        }
        return String.valueOf(num1);
    }
}