class Solution {
    public boolean exist(char[][] board, String word) {
        int len1 = board.length;
        int len2 = board[0].length;
        for(int i=0;i<len1;i++){
            for(int j=0;j<len2;j++){
                if(board[i][j] == word.charAt(0) && Recur(i,j,len1,len2,board,0,word)){
                    return true;
                }
            }
        }
        return false;
    }
    public boolean Recur(int i, int j, int len1, int len2, char[][] board, int c, String word){
        if(c == word.length()){
            return true;
        }
        if(i<0 || j<0 || i==len1 || j==len2 || board[i][j] != word.charAt(c)){
            return false;
        }
        char ch = board[i][j];
        board[i][j] = '0';
        boolean ans = Recur(i+1,j,len1,len2,board,c+1,word)
                     || Recur(i-1,j,len1,len2,board,c+1,word) 
                     || Recur(i,j+1,len1,len2,board,c+1,word)
                     || Recur(i,j-1,len1,len2,board,c+1,word);
        board[i][j] = ch;
        return ans;
    }
}
